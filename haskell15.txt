====================
begin haskell programming from first principles 

section 2.10

where vs let/in

printInc n = print plusTwo
  where plusTwo = n + 2


printInc2 n = let plusTwo = n + 2
  in print plusTwo


Note about ghci: functions after :load are no longer in scope:
:l file1
printInc 3
5
:l file2
printInc2 7
9
printInc 11  -- !!! error, not in scope


repl stuff:
> let x = 5 in x                  -- 5
> let x = 5 in x * x              -- 25
> let x = 5; y = 6 in x * y       -- 30
> let x = 3; y = 1000 in x + 3    -- 6

we can rewrite let expressions using where declarations:

let x = 5; y = 6 in x * y

could be rewritten as

multi1    = x * y
  where x = 5  -- lining up is style only
        y = 6

Here are some lets that can be converted:
let x = 3; y = 1000 in x * 3 + y
let y = 10; x = 10 * 5 + y in x * 5
let x = 7; y = negate x; z = y * 10 in z / x + y

end section 2.10, next is 2.11

end haskell programming from first principles 
====================
